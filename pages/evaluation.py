import pandas as pd
import streamlit as st
from util.agents import create_grader_agent, run_agent
from util.textract import load_pdf_text, parse_json
import asyncio

CRITERIAS = ["understanding", "explanation"]

TESTING = True
if TESTING:
    st.session_state["current_target"] = load_pdf_text("data/targets/target.pdf")
    st.session_state["current_assignment"] = load_pdf_text("data/assignment.pdf")
    st.session_state["current_golden_solution"] = load_pdf_text("data/solution.pdf")


if "current_assignment" not in st.session_state:
    st.warning("Cannot find assignment questions document to evaluate!")

if "current_target" not in st.session_state:
    st.warning("Cannot find answer document to evaluate!")

if "current_textbook" and "current_golden_solution" not in st.session_state:
    st.warning("Cannot find goldent answer or textbook!")


st.title("Assignment evaluation")

if "current_golden_solution" in st.session_state:
    input_data = {
        "question": st.session_state["current_assignment"],
        "solution": st.session_state["current_golden_solution"],
        "answer": st.session_state["current_target"],
        # TODO: Add option to change criteria
        "criteria": ["understanding", "explaination"]
    }

    agent = create_grader_agent("gpt-4o-mini")
    response = asyncio.run(run_agent(agent, input_data))
    assessment_json = parse_json(response["output"])

    st.subheader("Generated grades")
    st.text("Below is the scores generated by the Grader BOT. Feel free to edit all the scores")

    df = pd.DataFrame(assessment_json["grades"])

    def truncate_string(s):
        return s[:10] + '...' if len(s) > 10 else s

    df['question'] = df['question'].apply(truncate_string)
    df['answer'] = df['answer'].apply(truncate_string)
    df['solution'] = df['solution'].apply(truncate_string)
    df['explaination'] = df['explaination'].apply(truncate_string)
    df['score'] = 0
    
    df['score'] = 0
    for criteria in CRITERIAS:
        df['score'] += df[criteria]

    df['score'] /= len(CRITERIAS)

    edited_df = st.data_editor(
        df,
        hide_index = True,
        use_container_width = True
    )
